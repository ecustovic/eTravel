// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eTravelData;

namespace eTravelData.Migrations
{
    [DbContext(typeof(eTravelContext))]
    partial class eTravelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eTravelData.Models.Agencija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .IsRequired();

                    b.Property<string>("Manager")
                        .IsRequired();

                    b.Property<string>("Naziv")
                        .IsRequired();

                    b.Property<int?>("PutovanjeId");

                    b.Property<string>("SlikaUrl");

                    b.Property<string>("Telefon")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("PutovanjeId");

                    b.ToTable("Agencije");
                });

            modelBuilder.Entity("eTravelData.Models.Klijent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Grad");

                    b.Property<string>("Ime")
                        .IsRequired();

                    b.Property<string>("PostanskiBroj");

                    b.Property<string>("Prezime")
                        .IsRequired();

                    b.Property<int?>("PutovanjeId");

                    b.Property<string>("SlikaUrl");

                    b.Property<string>("Telefon")
                        .IsRequired();

                    b.Property<int?>("UplataId");

                    b.HasKey("Id");

                    b.HasIndex("PutovanjeId");

                    b.HasIndex("UplataId");

                    b.ToTable("Klijents");
                });

            modelBuilder.Entity("eTravelData.Models.Putovanje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumBookiranja");

                    b.Property<DateTime>("DatumPolaska");

                    b.Property<DateTime>("DatumPovratka");

                    b.Property<string>("Destinacija")
                        .IsRequired();

                    b.Property<bool>("DjecaBool");

                    b.Property<decimal>("Iznos");

                    b.Property<int>("MaxUcesnika");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int?>("UplataId");

                    b.HasKey("Id");

                    b.HasIndex("UplataId");

                    b.ToTable("Putovanja");
                });

            modelBuilder.Entity("eTravelData.Models.Uplata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumUplate");

                    b.Property<decimal>("Iznos");

                    b.HasKey("Id");

                    b.ToTable("Uplate");
                });

            modelBuilder.Entity("eTravelData.Models.Agencija", b =>
                {
                    b.HasOne("eTravelData.Models.Putovanje", "Putovanje")
                        .WithMany("Agencijas")
                        .HasForeignKey("PutovanjeId");
                });

            modelBuilder.Entity("eTravelData.Models.Klijent", b =>
                {
                    b.HasOne("eTravelData.Models.Putovanje", "Putovanje")
                        .WithMany()
                        .HasForeignKey("PutovanjeId");

                    b.HasOne("eTravelData.Models.Uplata", "Uplata")
                        .WithMany("Klijents")
                        .HasForeignKey("UplataId");
                });

            modelBuilder.Entity("eTravelData.Models.Putovanje", b =>
                {
                    b.HasOne("eTravelData.Models.Uplata", "Uplata")
                        .WithMany("Putovanja")
                        .HasForeignKey("UplataId");
                });
#pragma warning restore 612, 618
        }
    }
}
